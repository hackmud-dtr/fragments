{
	"_id": "anon_w4aj7r.scriptors",
	"type": "fragment",
	"mode": "player",
	"script": "anon_w4aj7r.scriptors",
	"sector": "K_1993",
	"sec_level": 4,
	"date_added": 1570937178034,
	"last_scraped": 1571072546187,
	"script_log": [
		{
			"type": "added",
			"when": 1570937178034
		}
	],
	"updt": 1571066737563,
	"edit": 21,
	"pl_output": "\ndark.scriptors is a library for working with scriptors.\n\n  `Na`(`Vx`):          `Nargument` format of `Vx`\n  `Nb`(`Vx`, `Vy`):       `Nbrute`-forces arguments `Vx` until output doesn't match `Vy`\n  `Nc`(`Vx`):          `Ncoloured` security level of `Vx`\n  `Nd`(`Vx`, `Vy`, `Vz`, `Vw`): `Ndecorrupts` `Vx` with `Vw` when called with `Vy`, bailing if !`Nt`(`Vz`)\n  `Ne`(`Vx`, `Vy`);          grabs `Nexposed` locs, pages `Vx` to `Vx`+`V5`, with `Vy` seconds left\n  `Nf`(`Vx`, `Vy`, `Vz`):    parses `Nfileserver` for corp `Vy` with user `Vz` from `Vx`\n  `Ng`:              (not yet used)\n  `Nh`(`Vx`):          check if `Vx` is `Nhidden`, public, or trust\n  `Ni`(`Vx`, `Vy`, `Vz`):    `Niteratively` solves `Vx` with args `Vy` and solvers `Vz`\n  `Nj`:             (not yet used)\n  `Nk`(`Vx`, `Vy`, `Vz`):    `Nclass` string for sec `Vx`, lvl `Vy`, knd `Vz`\n  `Nl`(`Vx`):          tries to parse `Vx` as a `Nloc`\n  `Nm`():           grabs locs from transaction `Nmemos`\n  `Nn`(`Vx`):          `Nnumeric` security level for `Vx` or -1\n  `No`(`Vx`, `Vy`):       adapter for scriptor `Vx` to run `Nonly` `Vy` times\n  `Np`(`Vx`):          `Nplain`text name of `Vx`, or false\n  `Nq`(`Vx`):          `Nquiet` display of `Vx`, which doesn't add to autocompletes\n  `Nr`(`Vx`):          `Nruns` array `Vx` of scripts, returning first error or false\n  `Ns`(`Vx`):          `Nsecurity` level number for `Vx`, or false\n  `Nt`(`Vx`):          checks that `Ntime` left to run is at least `Vx` seconds\n  `Nu`(`Vx`):          `Nuser` for script `Vx`\n  `Nv`(`Vx`):          `Nverify` security level with string `Vx`; defaults to 4, FULLSEC\n  `Nw`(`Vx`):          uses `Vx` to make query for `Nwhich` locs you want\n  `Nx`():           grabs locs from system `Naccess` logs\n  `Ny`:             (not yet used)\n  `Nz`:             (not yet used)\n  `N$`(`Vx`, `Vy`, `Vz`):    `Nshows` call of `Vx` with args `Vy` and comment `Vz`\n  `N_`:             (not yet used)\n\nin cases where its useful, script output may be forced into an array of strings.\n\nlocks can be solved in an intuitive way where different functions can be used\nfor each lock:\n\n  1. start with an an array of repexp-solvers.\n  2. iteratively try each regexp on the output until a match is found.\n  3. run the solver by passing in the latest output of the script, the scriptor,\n     and its arguments.\n  4. the solver returns either the output of the script if the lock has been\n     solved (indicating a new solver should be tried), or false if the lock\n     could not be solved\n  5. this process repeats until locks are solved.\n\nlocs are parsed with the following fields, with not-clever NPC detection:\n\n  `Nloc`: the full string of the `Nloc`\n  `Nsec`: numeric `Nsecurity` level\n  `Nacc`: `Naccess` prefix for script\n  `Npss`: `Npassword` suffix for script\n  `Nnme`: `Nname` prefix for NPC, or `Vsentience` if definitely not NPC\n  `Nusr`: `Nusername` suffix for NPC, or full user if definitely not NPC\n  `Nlvl`: `Nlevel` of NPC where:\n    `V0` is junkrat (jr)\n    `V1` is diggerdeck (dd)\n    `V2` is wreckbox (wb)\n    `V3` is phreakrig (pr)\n    `V4` is leetstack (ls)\n    `V5` is dead (i.e. probably retired, definitely not NPC)\n    `V6` is unknown (i.e. definitely not NPC)\n  `Nknd`: `Nkind` of NPC where:\n    `V0` is none (potentially NPC)\n    `V1` is weaver (wvr)\n    `V2` is wolf (wlf)\n    `V3` is raven (rvn)\n    `V4` is stag (stg)\n    `V5` is turtle (ttl)\n  `Nnew`: for sentiences, `Vtrue` if this loc is definitely exposed publicly\n",
	"next_scrape": 1571164224092
}