{
	"_id": "anon_w4aj7r.wrapper",
	"type": "fragment",
	"mode": "npc",
	"script": "anon_w4aj7r.wrapper",
	"sector": "K_8369",
	"sec_level": 4,
	"date_added": 1570937178034,
	"last_scraped": 1577019244573,
	"script_log": [
		{
			"type": "added",
			"when": 1570937178034
		},
		{
			"type": "died",
			"when": 1574236995554
		},
		[
			{
				"type": "sector change",
				"when": 1574237344572,
				"from": "K_8369",
				"to": "K_1993"
			}
		]
	],
	"updt": 1577012662802,
	"edit": 1274,
	"pl_output": "\ndark.wrapper is used to create libraries. its arguments are:\n\n  `Na`: arguments from the calling script\n  `Nc`: context from the calling script\n  `Nd`: documentation to return when called via the CLI\n  `Nf`: array of functions to create the library\n\nthe library starts as the empty object. for each function, the function is\ncalled on the library alongside the passed arguments, then the return value's\nenumerable properties are added to the object. if a library ends up being\nloaded multiple times, the arguments get merged into a single object. this is\nonly useful if the arguments are accessed when methods are called, as the\nlibrary is initialised eagerly\n\nfor convenience, the \"scripts\" argument to libraries accepts an array of\nscriptors which expands out to properties for each script name, with the period\nremoved. there are a few known scripts which get expanded to shorter aliases,\nnamely:\n\n  accts.balance -> ab\n  accts.transactions -> at\n  accts.xfer_gc_to -> ax\n  chats.tell -> ct\n  market.browse -> mbr\n  market.buy -> mby\n  market.sell -> ms\n  owo.notices_ur_loc -> owo\n  sys.access_log -> sa\n  sys.manage -> sm\n  sys.upgrades -> su\n  your.bank -> bank\n\nif any of the known scriptors is accessed but not provided via the CLI, a\nfriendly error will be returned so that the user knows what's wrong.\n",
	"next_scrape": 1577060001492,
	"scrape_ct": 17,
	"category": "UNKNOWN CATEGORY",
	"last_update": 1577019244573,
	"output": [
		{
			"args": {},
			"calls": 1948404,
			"base": "\ndark.wrapper is used to create libraries. its arguments are:\n\n  `Na`: arguments from the calling script\n  `Nc`: context from the calling script\n  `Nd`: documentation to return when called via the CLI\n  `Nf`: array of functions to create the library\n\nthe library starts as the empty object. for each function, the function is\ncalled on the library alongside the passed arguments, then the return value's\nenumerable properties are added to the object. if a library ends up being\nloaded multiple times, the arguments get merged into a single object. this is\nonly useful if the arguments are accessed when methods are called, as the\nlibrary is initialised eagerly\n\nfor convenience, the \"scripts\" argument to libraries accepts an array of\nscriptors which expands out to properties for each script name, with the period\nremoved. there are a few known scripts which get expanded to shorter aliases,\nnamely:\n\n  accts.balance -> ab\n  accts.transactions -> at\n  accts.xfer_gc_to -> ax\n  chats.tell -> ct\n  market.browse -> mbr\n  market.buy -> mby\n  market.sell -> ms\n  owo.notices_ur_loc -> owo\n  sys.access_log -> sa\n  sys.manage -> sm\n  sys.upgrades -> su\n  your.bank -> bank\n\nif any of the known scriptors is accessed but not provided via the CLI, a\nfriendly error will be returned so that the user knows what's wrong.\n",
			"fragments": [
				"he qu",
				"age. ",
				"BODY T",
				"tirely ",
				"nterpar",
				"cessity",
				"entirely",
				"art of s"
			],
			"hits": [
				{
					"document": "MFT0XD1_CLST0X95_SECT0X23E7_FILE0X8CAB060B",
					"frags": [
						"he qu",
						"age. ",
						"BODY T",
						"tirely ",
						"nterpar",
						"cessity",
						"entirely",
						"art of s"
					]
				}
			]
		}
	],
	"identified": [
		{
			"document": "MFT0XD1_CLST0X95_SECT0X23E7_FILE0X8CAB060B",
			"frags": [
				"he qu",
				"age. ",
				"BODY T",
				"tirely ",
				"nterpar",
				"cessity",
				"entirely",
				"art of s"
			]
		}
	]
}