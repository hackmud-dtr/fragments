{
	"_id": "anon_w4aj7r.text",
	"type": "fragment",
	"mode": "fresh",
	"script": "anon_w4aj7r.text",
	"sector": "SPC_3022",
	"sec_level": 4,
	"date_added": 1570937178034,
	"last_scraped": 1578943233580,
	"script_log": [
		{
			"type": "added",
			"when": 1570937178034
		},
		{
			"type": "died",
			"when": 1578942931111
		},
		[
			{
				"type": "sector change",
				"when": 1578943011949,
				"from": "SPC_3022",
				"to": "K_1993"
			}
		]
	],
	"updt": 1578943013680,
	"edit": 1387,
	"pl_output": "\ndark.text is a library for working with text (strings).\n\n  `Na`(`Vx`):       `Nargument` format for `Vx`, as a string\n  `Nb`(`Vx`):       decodes `Nbase64` text `Vx` as an array of bytes\n  `Nc`:          (not yet used)\n  `Nd`(`Vx`, `Vy`):    `Ndecorrupts` `Vx`, only matching for `Vy` if given (*)\n  `Ne`:          (not yet used)\n  `Nf`(`Vx`, `Vy`):    `Nfinds` matches of `Vy` in `Vx`\n  `Ng`(`Vx`, `Vy`):    unique `Ngroups` from matches of `Vy` in `Vx`\n  `Nh`:          (not yet used)\n  `Ni`(`Vx`):       checks if `Vx` `Nis` text\n  `Nj`(`Vx`):       converts to `VJSON` string\n  `Nk`(`Vx`, `Vy`, `Vz`): makes `Ncut` of `Vx` starting at `Vy`, ending just after `Vz` or at end of `Vx`\n  `Nl`(`Vx`):       `Nlowercases` `Vx`\n  `Nm`(`Vx`, `Vy`):    checks if `Vy` `Nmatches` `Vx`\n  `Nn`:          (not yet used)\n  `No`(`Vx`):       `Norders` the letters in `Vx`\n  `Np`(`Vx`, `Vy`):    `Npermutations` of the letters in `Vx`, excluding `Vy`\n  `Nq`:          (not yet used)\n  `Nr`(`Vx`, `Vy`):    `Nremoves` `Vy` from `Vx`\n  `Ns`(`Vx`, `Vy`, `Vz`): `Nsubstitutes` `Vy` with `Vz` in`Vx`\n  `Nt`(`Vx`):       makes `Ntext` version of `Vx`\n  `Nu`(`Vx`):       `Nuppercases` `Vx`\n  `Nv`:          (not yet used)\n  `Nw`(`Vx`, `Vy`):    returns `Nwhich` of `Vy` matches `Vx`, or false (**)\n  `Nx`:          (not yet used)\n  `Ny`:          (not yet used)\n  `Nz`(`Vx`):       does a naive `Nshift` of base64 text `Vx`\n  `N$`:          (not yet used)\n  `N_`:          (not yet used)\n\ndecorruption works by continuation-- if more data is needed, a function is\nreturned which takes in a string. the strings are lined up to remove corrupted\ncharacters, and eventually the decorrupted string is returned instead of the\ncontinuation function.\n\nfor the `Nwhich` function, the argument takes in a pair of regexps and values;\nthe value is returned when the regexp matches. this is useful for answering\na known list of questions.\n",
	"next_scrape": 1578943293580,
	"category": "UNKNOWN CATEGORY",
	"last_update": 1578943233580,
	"output": [
		{
			"args": {},
			"calls": 3896510,
			"base": "\ndark.text is a library for working with text (strings).\n\n  `Na`(`Vx`):       `Nargument` format for `Vx`, as a string\n  `Nb`(`Vx`):       decodes `Nbase64` text `Vx` as an array of bytes\n  `Nc`:          (not yet used)\n  `Nd`(`Vx`, `Vy`):    `Ndecorrupts` `Vx`, only matching for `Vy` if given (*)\n  `Ne`:          (not yet used)\n  `Nf`(`Vx`, `Vy`):    `Nfinds` matches of `Vy` in `Vx`\n  `Ng`(`Vx`, `Vy`):    unique `Ngroups` from matches of `Vy` in `Vx`\n  `Nh`:          (not yet used)\n  `Ni`(`Vx`):       checks if `Vx` `Nis` text\n  `Nj`(`Vx`):       converts to `VJSON` string\n  `Nk`(`Vx`, `Vy`, `Vz`): makes `Ncut` of `Vx` starting at `Vy`, ending just after `Vz` or at end of `Vx`\n  `Nl`(`Vx`):       `Nlowercases` `Vx`\n  `Nm`(`Vx`, `Vy`):    checks if `Vy` `Nmatches` `Vx`\n  `Nn`:          (not yet used)\n  `No`(`Vx`):       `Norders` the letters in `Vx`\n  `Np`(`Vx`, `Vy`):    `Npermutations` of the letters in `Vx`, excluding `Vy`\n  `Nq`:          (not yet used)\n  `Nr`(`Vx`, `Vy`):    `Nremoves` `Vy` from `Vx`\n  `Ns`(`Vx`, `Vy`, `Vz`): `Nsubstitutes` `Vy` with `Vz` in`Vx`\n  `Nt`(`Vx`):       makes `Ntext` version of `Vx`\n  `Nu`(`Vx`):       `Nuppercases` `Vx`\n  `Nv`:          (not yet used)\n  `Nw`(`Vx`, `Vy`):    returns `Nwhich` of `Vy` matches `Vx`, or false (**)\n  `Nx`:          (not yet used)\n  `Ny`:          (not yet used)\n  `Nz`(`Vx`):       does a naive `Nshift` of base64 text `Vx`\n  `N$`:          (not yet used)\n  `N_`:          (not yet used)\n\ndecorruption works by continuation-- if more data is needed, a function is\nreturned which takes in a string. the strings are lined up to remove corrupted\ncharacters, and eventually the decorrupted string is returned instead of the\ncontinuation function.\n\nfor the `Nwhich` function, the argument takes in a pair of regexps and values;\nthe value is returned when the regexp matches. this is useful for answering\na known list of questions.\n",
			"fragments": [
				"r© ¢f",
				"r¨l§ ",
				"n¨i©e",
				"n¤i¦e",
				"i¢e§y",
				"hÃ Áu",
				"hÃ ªu",
				"hÃ qu",
				"hÁ qu",
				"hª ©u",
				"hª qu",
				"h© qu",
				"h¨ qu",
				"h§ qu",
				"h¦ qu",
				"h¤ Áu",
				"h¤ qu",
				"h¢ qu",
				"h¡ ¡u",
				"h¡ qu",
				"heÃqu",
				"heÁqu",
				"heªqu",
				"he©qu",
				"he¨qu",
				"he§qu",
				"he¦qu",
				"he¤qu",
				"he¢qu",
				"he¡qu",
				"he Ãu",
				"he Áu",
				"he ªu",
				"he ©u",
				"he ¨u",
				"he §u",
				"he ¦u",
				"he ¤u",
				"he ¢u",
				"he ¡u",
				"e¢t©r",
				"aÃe. ",
				"aÁe. ",
				"aªe. ",
				"a©e. ",
				"a¨e© ",
				"a¨e. ",
				"a§e. ",
				"a¦e. ",
				"a¤e. ",
				"a¢e. ",
				"a¡eª ",
				"a¡e. ",
				"agÃ. ",
				"agÁ. ",
				"agª. ",
				"ag©. ",
				"ag¨. ",
				"ag§. ",
				"ag¦. ",
				"ag¤. ",
				"ag¢. ",
				"ageÃ ",
				"ageÁ ",
				"ageª ",
				"age© ",
				"age¨ ",
				"age§ ",
				"age¦ ",
				"age¤ ",
				"age¢ ",
				"age¡ ",
				"O§Y©T",
				"BªDª ",
				"t©r¢ar",
				"t¢rp¤r",
				"t¢re¢y",
				"r© ©f ",
				"r© ¦f ",
				"r© ¤f ",
				"r¨ ¦f ",
				"r¦ ¨f ",
				"r¦ ¡f ",
				"r¡ o¨ ",
				"rtÃo¢ ",
				"rtªo¡ ",
				"rt¤o¡ ",
				"rt¢o¡ ",
				"nÃe¨pa",
				"n¨e¡pa",
				"n¦e¨pa",
				"n¦erÁa",
				"n¡er¤a",
				"i§el§ ",
				"i¦e¢y ",
				"eÁt¨re",
				"e¨t©re",
				"e¦tiªe",
				"e¤t¡re",
				"esÃi¢y",
				"enÃi¡e",
				"en¤i©e",
				"en¢i¦e",
				"ed Mal",
				"c¦ss§t",
				"asaid ",
				"BÃDYÁT",
				"BÃDY T",
				"BÁDÃ T",
				"BÁDY T",
				"BªDY T",
				"B©Dª T",
				"B©DYÁT",
				"B©DY T",
				"B¨DY T",
				"B§DYªT",
				"B§DY T",
				"B¦DY T",
				"B¤DY T",
				"B¢D¤ T",
				"B¢DY T",
				"B¡DY¦T",
				"B¡DY T",
				"BOÃY¨T",
				"BOÃY T",
				"BOÁY T",
				"BOªY T",
				"BO©Y T",
				"BO¨Y T",
				"BO§Y T",
				"BO¦Y¦T",
				"BO¦Y T",
				"BO¤Y¨T",
				"BO¤Y T",
				"BO¢Y T",
				"BO¡Y§T",
				"BO¡Y T",
				"BODÃ T",
				"BODÁ T",
				"BODª T",
				"BOD© T",
				"BOD¨ T",
				"BOD§ T",
				"BOD¦ T",
				"BOD¤ T",
				"BOD¢ T",
				"BOD¡ T",
				"BODYÃT",
				"BODYÁT",
				"BODYªT",
				"BODY©T",
				"BODY¨T",
				"BODY§T",
				"BODY¦T",
				"BODY¤T",
				"BODY¢T",
				"BODY¡T",
				"tÃrely ",
				"tÁrel¨ ",
				"tÁrely ",
				"tªrely ",
				"t©rely ",
				"t¨rely ",
				"t§relª ",
				"t§rely ",
				"t¦rely ",
				"t¤r¦ly ",
				"t¤reÃy ",
				"t¤rel¦ ",
				"t¤rely ",
				"t¢rely ",
				"t¡reÁy ",
				"t¡rely ",
				"tiÃel¤ ",
				"tiÃely ",
				"tiÁe¡y ",
				"tiÁelÁ ",
				"tiÁely ",
				"tiªe¨y ",
				"tiªel¢ ",
				"tiªely ",
				"ti©ely ",
				"ti¨e¢y ",
				"ti¨ely ",
				"ti§ely ",
				"ti¦ely ",
				"ti¤ely ",
				"ti¢ely ",
				"ti¡ely ",
				"tisaid ",
				"tirÃl¦ ",
				"tirÃly ",
				"tirÁlÃ ",
				"tirÁly ",
				"tirªly ",
				"tir©ly ",
				"tir¨ly ",
				"tir§ly ",
				"tir¦ly ",
				"tir¤ly ",
				"tir¢ly ",
				"tir¡ly ",
				"tireÃy ",
				"tireÁy ",
				"tireªy ",
				"tire©y ",
				"tire¨y ",
				"tire§y ",
				"tire¦y ",
				"tire¤y ",
				"tire¢y ",
				"tire¡y ",
				"tirelÃ ",
				"tirelÁ ",
				"tirelª ",
				"tirel© ",
				"tirel¨ ",
				"tirel¦ ",
				"tirel¤ ",
				"tirel¢ ",
				"tirel¡ ",
				"r¨ ofªs",
				"r¤ ¦f s",
				"nÃir¤ly",
				"nÃerpar",
				"nÁerÃar",
				"nÁer©ar",
				"nÁerp¤r",
				"nÁerp¡r",
				"nÁerpar",
				"nªe¢par",
				"nªer¦ar",
				"nªerpar",
				"n©erÃar",
				"n©er¡ar",
				"n©erpar",
				"n¨erpar",
				"n§er¦ar",
				"n§erpar",
				"n¦e¤par",
				"n¦erp¦r",
				"n¦erp¡r",
				"n¦erpar",
				"n¤e¢par",
				"n¤er¨ar",
				"n¤erpar",
				"n¢erpar",
				"n¡e¢par",
				"n¡erªar",
				"n¡erpar",
				"ntÃr§ly",
				"ntÃr¦ar",
				"ntÃrpar",
				"ntÁrp¤r",
				"ntÁrpar",
				"ntªrpÃr",
				"ntªrpar",
				"nt©rp¢r",
				"nt©rpar",
				"nt¨rpÁr",
				"nt¨rpar",
				"nt§rÁly",
				"nt§rp©r",
				"nt§rp§r",
				"nt§rpar",
				"nt¦rpÃr",
				"nt¦rpar",
				"nt¤r¢ar",
				"nt¤rpar",
				"nt¢r¢ar",
				"nt¢rpªr",
				"nt¢rp¨r",
				"nt¢rpar",
				"nt¡rp¤r",
				"nt¡rpar",
				"nteÃpar",
				"nteÁpÁr",
				"nteÁp¨r",
				"nteªpar",
				"nte©pÃr",
				"nte©pªr",
				"nte©par",
				"nte¨par",
				"nte¦par",
				"nte¤par",
				"nte¢par",
				"nte¡par",
				"nterÃar",
				"nterÁar",
				"nterªar",
				"nter©ar",
				"nter¨ar",
				"nter§ar",
				"nter¦ar",
				"nter¤ar",
				"nter¢ar",
				"nter¡ar",
				"nterpÃr",
				"nterpÁr",
				"nterpªr",
				"nterp©r",
				"nterp¨r",
				"nterp§r",
				"nterp¦r",
				"nterp¤r",
				"nterp¢r",
				"nterp¡r",
				"e©t¤rel",
				"enªi¨el",
				"en¨ir¨l",
				"end Mal",
				"ed thay",
				"d Malre",
				"cÃs©ity",
				"cÃssity",
				"cÁssªty",
				"cÁssity",
				"cªssi©y",
				"cªssi¨y",
				"cªssity",
				"c©ssity",
				"c¨sÃity",
				"c¨ssi¡y",
				"c¨ssity",
				"c¦s¨ity",
				"c¦ssi¦y",
				"c¦ssity",
				"c¤ssi¤y",
				"c¤ssity",
				"c¢sÃity",
				"c¢ss©ty",
				"c¢ss¢ty",
				"c¢ssi§y",
				"c¢ssity",
				"c¡ssity",
				"ceÃs§ty",
				"ceÃsity",
				"ceÁsity",
				"ceªs¨ty",
				"ceªsity",
				"ce©si©y",
				"ce©sity",
				"ce¨siªy",
				"ce¨sity",
				"ce§si§y",
				"ce§si¡y",
				"ce§sity",
				"ce¦sity",
				"ce¤sÁty",
				"ce¤sity",
				"ce¢si¤y",
				"ce¢sity",
				"ce¡si¦y",
				"ce¡sity",
				"cesÃity",
				"cesÁity",
				"cesªi§y",
				"cesªity",
				"ces©ity",
				"ces¨i¨y",
				"ces¨ity",
				"ces§ity",
				"ces¦ity",
				"ces¤ity",
				"ces¢ity",
				"ces¡i¨y",
				"ces¡i¡y",
				"ces¡ity",
				"cessÃty",
				"cessÁty",
				"cessªty",
				"cess©ty",
				"cess¨ty",
				"cess§ty",
				"cess¦ty",
				"cess¤ty",
				"cess¢ty",
				"cess¡ty",
				"cessiÃy",
				"cessiÁy",
				"cessiªy",
				"cessi©y",
				"cessi¨y",
				"cessi§y",
				"cessi¦y",
				"cessi¤y",
				"cessi¢y",
				"cessi¡y",
				"a©t o§ ",
				"a¦t©of ",
				"a¡tªoª ",
				"arÁ o© ",
				"antienc",
				"agd Mal",
				"Bed tha",
				" werey ",
				"weresity",
				"said par",
				"said  qu",
				"rt o wer",
				"ntience ",
				"h# erin,",
				"eÃtirely",
				"eÁti¦ely",
				"eÁtireÁy",
				"eÁtire¦y",
				"eÁtirely",
				"eªt¦rely",
				"eªtirely",
				"e©ti¤ely",
				"e©tire§y",
				"e©tirely",
				"e¨ti¢ely",
				"e¨ti¡ely",
				"e¨tirely",
				"e§tirªly",
				"e§tireªy",
				"e§tirely",
				"e¦tirely",
				"e¤t¢rely",
				"e¤tirely",
				"e¢tir¦ly",
				"e¢tirely",
				"e¡ti¨ely",
				"e¡tirely",
				"enÃi©ely",
				"enÃireªy",
				"enÃire¤y",
				"enÃirely",
				"enÁire¡y",
				"enÁirely",
				"enªi©ely",
				"enªirely",
				"en©i©ely",
				"en©ireªy",
				"en©irely",
				"en¨i¨ely",
				"en¨irely",
				"en§ir§ly",
				"en§ire§y",
				"en§irely",
				"en¦i¨ely",
				"en¦ire©y",
				"en¦irely",
				"en¤irely",
				"en¢ireÁy",
				"en¢irely",
				"en¡irely",
				"entÃrely",
				"entÁreÁy",
				"entÁrely",
				"entªrely",
				"ent©r¡ly",
				"ent©reÁy",
				"ent©re¨y",
				"ent©rely",
				"ent¨rÁly",
				"ent¨r¨ly",
				"ent¨rely",
				"ent§rely",
				"ent¦reÃy",
				"ent¦rely",
				"ent¤rely",
				"ent¢rely",
				"ent¡re¤y",
				"ent¡rely",
				"entiÃeÁy",
				"entiÃeªy",
				"entiÃely",
				"entiÁely",
				"entiªely",
				"enti©ely",
				"enti¨ely",
				"enti§ely",
				"enti¦ely",
				"enti¤ely",
				"enti¢ely",
				"enti¡ely",
				"entirÃly",
				"entirÁly",
				"entirªly",
				"entir©ly",
				"entir¨ly",
				"entir§ly",
				"entir¦ly",
				"entir¤ly",
				"entir¢ly",
				"entir¡ly",
				"entireÃy",
				"entireÁy",
				"entireªy",
				"entire©y",
				"entire¨y",
				"entire§y",
				"entire¦y",
				"entire¤y",
				"entire¢y",
				"entire¡y",
				"entd Mal",
				"ed tha s",
				"c¤sssaid",
				"ceed tha",
				"aÃt of s",
				"aÁt o¡ s",
				"aÁt of s",
				"aªt of s",
				"a©t ¡f s",
				"a©t o¨ s",
				"a©t of s",
				"a¨t §f s",
				"a¨t o¨ s",
				"a¨t of s",
				"a§t of s",
				"a¦t of s",
				"a¤t of s",
				"a¢t o¦ s",
				"a¢t of s",
				"a¡t of s",
				"arÃ §f s",
				"arÃ of s",
				"arÁ of¦s",
				"arÁ of s",
				"arª ªf s",
				"arª of s",
				"ar© of s",
				"ar¨ §f s",
				"ar¨ o¤ s",
				"ar¨ of s",
				"ar§ of s",
				"ar¦ o© s",
				"ar¦ of s",
				"ar¤ of s",
				"ar¢ oÁ s",
				"ar¢ of s",
				"ar¡ o¢ s",
				"ar¡ of¤s",
				"ar¡ of s",
				"artÃof s",
				"artÁof s",
				"artªof s",
				"art©o¨ s",
				"art©of s",
				"art¨of¨s",
				"art¨of s",
				"art§of s",
				"art¦of¤s",
				"art¦of s",
				"art¤of s",
				"art¢of s",
				"art¡o© s",
				"art¡of s",
				"art Ãf s",
				"art Áf s",
				"art ªf s",
				"art ©f¨s",
				"art ©f s",
				"art ¨f s",
				"art §f¦s",
				"art §f s",
				"art ¦f s",
				"art ¤f s",
				"art ¢fÃs",
				"art ¢f s",
				"art ¡f s",
				"art oÃ s",
				"art oÁ s",
				"art oª s",
				"art o© s",
				"art o¨ s",
				"art o§ s",
				"art o¦ s",
				"art o¤ s",
				"art o¢ s",
				"art o¡ s",
				"art ofÃs",
				"art ofÁs",
				"art ofªs",
				"art of©s",
				"art of¨s",
				"art of§s",
				"art of¦s",
				"art of¤s",
				"art of¢s",
				"art of¡s",
				"aged tha",
				"age were",
				"Bntience",
				"# erin,y",
				" wereof ",
				" werely ",
				"weret of ",
				"tÃ# erin,",
				"tired tha",
				"said age.",
				"ntienceir",
				"he# erin,",
				"he q were",
				"ereed tha",
				"entid Mal",
				"en# erin,",
				"cess were",
				"BODYd Mal",
				" ## Who u",
				"tirel were",
				"tir# erin,",
				"rÃ of said",
				"rt ofd Mal",
				"rt ntience",
				"reed thae.",
				"reed tha T",
				"o said Mly",
				"ntintience",
				"heo said M",
				"he qud Mal",
				"es ## Who ",
				"erpar were",
				"entirsaid ",
				"entir were",
				"enreed tha",
				"ed thage. ",
				"ed thaely ",
				"d Malirely",
				"d Malerpar",
				"d Mal of s",
				"cesntience",
				"artntience",
				"art# erin,",
				"age. said ",
				"B¤DYed tha",
				"BOD# erin,",
				"# erin, of",
				" werehe qu",
				" ## Who §r",
				" ## Who ly",
				"tirreed tha",
				"tirelysaid ",
				"tir ## Who ",
				"said tirely",
				"rt ofed tha",
				"rt o# erin,",
				"reed thaity",
				"o said Mely",
				"nÁi ## Who ",
				"entreed tha",
				"d Malentire",
				"cessitd Mal",
				"cessied tha",
				"BODY ## Who",
				"## Who rely",
				"# erin,ge. ",
				"# erin,ely ",
				" wereBODY T",
				" ## Who of ",
				" ## Who f s",
				"said Vxr§ of",
				"said  ¢he qu",
				"reed tha of ",
				"o said Mt of",
				"o said Mrely",
				"ntiencessity",
				"irel ## Who ",
				"he qreed tha",
				"entireed tha",
				"enti ## Who ",
				"art ¨# erin,",
				"BODY ntience",
				"## Who `age.",
				"# erin,ssity",
				"# erin,he qu",
				"tirely zd Mal",
				"said utBODY T",
				"said entirely",
				"reed thaag¡. ",
				"o said Mssi¡y",
				"o said MODY T",
				"ntiencet of s",
				"ntiencert of ",
				"ntienceBODY T",
				"he qudntience",
				"entire ed tha",
				"ed thatirely ",
				"d Malitirely ",
				"d Mal\ntirely ",
				"age. `# erin,",
				"age. ,ntience",
				"BODY o said M",
				"## Who essity",
				" were:tirel§ ",
				" ## Who ssity",
				"tire¨yo said M",
				"tirelyreed tha",
				"rt of \n# erin,",
				"reed thatªrpar",
				"reed thart of ",
				"o said Mterpar",
				"o said Mrt ¢f ",
				"o said Messity",
				"o said Mentire",
				"nt¡rely# erin,",
				"ntiencentirely",
				"nteÁpar# erin,",
				"nterpa ## Who ",
				"irely wntience",
				"he quxo said M",
				"entire ## Who ",
				"ed tha¨tirely ",
				"d Malsentirely",
				"art of s\nd Mal",
				"BODY Tªntience",
				"## Who ntirely",
				"# erin,sBODY T",
				"# erin,ntirely",
				"# erin,`BODY T",
				"# erin, rt of ",
				" ## Who terpar",
				" ## Who  age. ",
				"rt of ¡o said M",
				"nterpar`# erin,",
				"en¢ire¤ ## Who ",
				"c§ssityreed tha",
				"art of sn d Mal",
				"BODY T  ## Who ",
				" ## Who rt of s",
				"tirely q ## Who ",
				"reed tha(tirely ",
				"reed tha mBODY T",
				"o said Mtnte§par",
				"o said M cessity",
				"o said M  entire",
				"entirelye# erin,",
				"ed tha `art of s",
				"cessityusntience",
				" ## Who entirely",
				"tirely  mreed tha",
				"reed tha`aÃt of¤s",
				"entirely o said M",
				"art of sdreed tha"
			],
			"hits": [
				{
					"document": "MFT0XD1_CLST0X95_SECT0X23E7_FILE0X8CAB060B",
					"frags": [
						"he qu",
						"age. ",
						"BODY T",
						"tirely ",
						"nterpar",
						"cessity",
						"entirely",
						"art of s"
					]
				}
			]
		}
	],
	"identified": [
		{
			"document": "MFT0XD1_CLST0X95_SECT0X23E7_FILE0X8CAB060B",
			"frags": [
				"he qu",
				"age. ",
				"BODY T",
				"tirely ",
				"nterpar",
				"cessity",
				"entirely",
				"art of s"
			]
		}
	],
	"scrape_ct": 18
}